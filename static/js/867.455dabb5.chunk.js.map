{"version":3,"file":"static/js/867.455dabb5.chunk.js","mappings":"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","sources":["redux/contacts/selectors.js","webpack://react-homework-template/./src/components/ContactFilter/ContactFilter.module.css?a140","components/ContactFilter/ContactFilter.jsx","webpack://react-homework-template/./src/components/ContactForm/ContactForm.module.css?b5b2","components/ContactForm/ContactForm.jsx","webpack://react-homework-template/./src/components/ContactList/ContactList.module.css?1ce0","webpack://react-homework-template/./src/components/Contact/Contact.module.css?03fd","components/Contact/Contact.jsx","components/ContactList/ContactList.jsx","webpack://react-homework-template/./src/components/Container/Container.module.css?9f71","components/Container/Container.jsx","webpack://react-homework-template/./src/pages/Contacts/Contacts.module.css?fb9d","pages/Contacts/Contacts.js"],"sourcesContent":["import { createSelector } from '@reduxjs/toolkit';\n\nexport const selectContacts = state => state.contacts.contactsArray;\n\nexport const selectLoading = state => state.contacts.isLoading;\n\nexport const selectError = state => state.contacts.error;\n\nexport const selectFilter = state => state.filter.query;\n\n// createSelector мемозирует, тоесть кеширует в памяти значение selectVisibleContacts,\n// и только при смене selectContacts, selectFilter будет переращет\nexport const selectVisibleContacts = createSelector(\n  [selectContacts, selectFilter],\n  (contacts, filter) => {\n    const normalizedFilter = filter.toLowerCase();\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(normalizedFilter)\n    );\n  }\n);\n\n// export const getVisibleContacts = state => {\n//   const contacts = getContacts(state);\n//   const filter = getFilter(state);\n\n//   const normalizedFilter = filter.toLowerCase();\n//   return contacts.filter(contact =>\n//     contact.name.toLowerCase().includes(normalizedFilter)\n//   );\n// };\n","// extracted by mini-css-extract-plugin\nexport default {\"box\":\"ContactFilter_box__vMDWi\",\"input-container\":\"ContactFilter_input-container__t5qhO\",\"input\":\"ContactFilter_input__8mWOi\",\"label\":\"ContactFilter_label__qRVzC\",\"underline\":\"ContactFilter_underline__KtmtW\"};","import { useDispatch, useSelector } from 'react-redux';\nimport { selectFilter } from 'redux/contacts/selectors';\nimport { createFilter } from 'redux/contacts/filterSlice';\n\nimport css from './ContactFilter.module.css';\n\nconst ContactFilter = () => {\n  const dispatch = useDispatch();\n  const value = useSelector(selectFilter);\n\n  const onChangeFilter = event => {\n    const inputValue = event.currentTarget.value;\n\n    const nameRegex = /^[a-zA-Zа-яА-ЯёЁіїєІЇЄ' -]*$/;\n    if (nameRegex.test(inputValue)) {\n      dispatch(createFilter(inputValue));\n    }\n  };\n\n  return (\n    <div className={css.box}>\n      <div className={css['input-container']}>\n        <input\n          id=\"name\"\n          name=\"name\"\n          type=\"text\"\n          required\n          placeholder=\" \"\n          className={css.input}\n          value={value}\n          onChange={onChangeFilter}\n        />\n        <label htmlFor=\"name\" className={css.label}>\n          Find contacts by name\n        </label>\n        <div className={css.underline}></div>\n      </div>\n    </div>\n  );\n};\n\nexport default ContactFilter;\n","// extracted by mini-css-extract-plugin\nexport default {\"form\":\"ContactForm_form__dhl+T\",\"input-container\":\"ContactForm_input-container__zvhu6\",\"input\":\"ContactForm_input__Bl93P\",\"label\":\"ContactForm_label__-cVXI\",\"underline\":\"ContactForm_underline__US7-3\",\"button\":\"ContactForm_button__eSwX9\"};","import { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Notify } from 'notiflix';\nimport { selectContacts } from 'redux/contacts/selectors';\nimport { addContact } from 'redux/contacts/operations';\n\nimport css from './ContactForm.module.css';\n\nconst ContactEditor = () => {\n  const [formData, setFormData] = useState({\n    name: '',\n    number: '',\n  });\n\n  const dispatch = useDispatch();\n  const contacts = useSelector(selectContacts);\n\n  const handleChange = e => {\n    const { name, value } = e.target;\n\n    setFormData(prev => {\n      switch (name) {\n        case 'name': {\n          const nameRegex = /^[a-zA-Zа-яА-ЯёЁіїєІЇЄ' -]*$/;\n          if (!nameRegex.test(value)) {\n            return prev; // не обновляем, если символ не подходит\n          }\n          break;\n        }\n        case 'number': {\n          const phoneRegex = /^[0-9+()\\s-]*$/;\n          if (!phoneRegex.test(value)) {\n            return prev;\n          }\n          break;\n        }\n        default:\n          break;\n      }\n\n      return { ...prev, [name]: value };\n    });\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    const { name, number } = formData;\n\n    const isExist = contacts.find(\n      contact => contact.name.toLowerCase() === name.toLowerCase()\n    );\n\n    if (isExist) {\n      Notify.failure(`${name} is already in contacts`);\n      return;\n    }\n\n    dispatch(addContact({ name, number }));\n    setFormData({ name: '', number: '' });\n  };\n\n  return (\n    <form className={css.form} onSubmit={handleSubmit}>\n      {/* Name input */}\n      <div className={css['input-container']}>\n        <input\n          id=\"name\"\n          name=\"name\"\n          type=\"text\"\n          required\n          placeholder=\" \"\n          className={css.input}\n          value={formData.name}\n          onChange={handleChange}\n        />\n        <label htmlFor=\"name\" className={css.label}>\n          Name\n        </label>\n        <div className={css.underline}></div>\n      </div>\n\n      {/* Number input */}\n      <div className={css['input-container']}>\n        <input\n          id=\"number\"\n          name=\"number\"\n          type=\"tel\"\n          required\n          placeholder=\" \"\n          className={css.input}\n          value={formData.number}\n          onChange={handleChange}\n        />\n        <label htmlFor=\"number\" className={css.label}>\n          Number\n        </label>\n        <div className={css.underline}></div>\n      </div>\n\n      <button type=\"submit\" className={css.button}>\n        Add contact\n      </button>\n    </form>\n  );\n};\n\nexport default ContactEditor;\n","// extracted by mini-css-extract-plugin\nexport default {\"list\":\"ContactList_list__csErn\"};","// extracted by mini-css-extract-plugin\nexport default {\"contact\":\"Contact_contact__4zmlP\",\"box\":\"Contact_box__pf+aR\",\"iconButton\":\"Contact_iconButton__Zv-2Q\"};","import { useDispatch } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport css from './Contact.module.css';\nimport { deleteContact } from 'redux/contacts/operations';\n\nimport { MdOutlineDeleteOutline } from 'react-icons/md';\n\nconst Contact = ({ id, name, number }) => {\n  const dispatch = useDispatch();\n\n  return (\n    <li className={css.contact}>\n      <div className={css.box}>\n        <p>{name}:</p>\n        <p>{number}</p>\n        <button\n          type=\"button\"\n          className={css.iconButton}\n          title=\"Delete contact\"\n          onClick={() => dispatch(deleteContact(id))}\n        >\n          <MdOutlineDeleteOutline />\n        </button>\n      </div>\n    </li>\n  );\n};\n\nexport default Contact;\n\nContact.propTypes = {\n  id: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  number: PropTypes.string.isRequired,\n};\n","import css from './ContactList.module.css';\nimport Contact from '../Contact';\nimport { useSelector } from 'react-redux';\nimport { selectVisibleContacts } from 'redux/contacts/selectors';\n\nconst ContactList = () => {\n  const contacts = useSelector(selectVisibleContacts);\n\n  return (\n    <ul className={css.list}>\n      {contacts &&\n        contacts.map(contact => <Contact key={contact.id} {...contact} />)}\n    </ul>\n  );\n};\n\nexport default ContactList;\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"Container_container__VVOCq\"};","import css from './Container.module.css';\n\nconst Container = ({ children }) => (\n  <div className={css.container}>{children}</div>\n);\n\nexport default Container;\n","// extracted by mini-css-extract-plugin\nexport default {\"title\":\"Contacts_title__LxdN4\",\"subtitle\":\"Contacts_subtitle__YZry6\"};","import ContactFilter from '../../components/ContactFilter';\nimport ContactForm from '../../components/ContactForm';\nimport ContactList from '../../components/ContactList';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectError, selectLoading } from 'redux/contacts/selectors';\nimport { useEffect } from 'react';\nimport { fetchContacts } from 'redux/contacts/operations';\nimport Container from 'components/Container';\nimport css from './Contacts.module.css';\n\nconst Contacts = () => {\n  const dispatch = useDispatch();\n  const isLoading = useSelector(selectLoading);\n  const error = useSelector(selectError);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <section className=\"section-page\">\n      <Container>\n        <p className={css.title}>Phonebook</p>\n        <ContactForm />\n        <p className={css.subtitle}>Contacts list</p>\n        <ContactFilter />\n        {isLoading && <p>Contacts is loading, please wait...</p>}\n        {error && <p>{error}</p>}\n        <ContactList />\n      </Container>\n    </section>\n  );\n};\n\nexport default Contacts;\n"],"names":["selectContacts","state","contacts","contactsArray","selectLoading","isLoading","selectError","error","selectFilter","filter","query","selectVisibleContacts","createSelector","normalizedFilter","toLowerCase","contact","name","includes","dispatch","useDispatch","value","useSelector","className","css","id","type","required","placeholder","onChange","event","inputValue","currentTarget","test","createFilter","htmlFor","useState","number","formData","setFormData","handleChange","e","target","prev","onSubmit","preventDefault","find","Notify","addContact","title","onClick","deleteContact","map","children","useEffect","fetchContacts","ContactForm"],"sourceRoot":""}