{"version":3,"file":"static/js/319.f396cdad.chunk.js","mappings":"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","sources":["redux/contacts/selectors.js","webpack://react-homework-template/./src/components/ContactFilter/ContactFilter.module.css?a140","components/ContactFilter/ContactFilter.jsx","webpack://react-homework-template/./src/components/ContactForm/ContactForm.module.css?b5b2","components/ContactForm/ContactForm.jsx","webpack://react-homework-template/./src/components/ContactList/ContactList.module.css?1ce0","webpack://react-homework-template/./src/components/Contact/Contact.module.css?03fd","components/Contact/Contact.jsx","components/ContactList/ContactList.jsx","pages/Contacts/Contacts.js"],"sourcesContent":["import { createSelector } from '@reduxjs/toolkit';\n\nexport const selectContacts = state => state.contacts.contactsArray;\n\nexport const selectLoading = state => state.contacts.isLoading;\n\nexport const selectError = state => state.contacts.error;\n\nexport const selectFilter = state => state.filter.query;\n\n// createSelector мемозирует, тоесть кеширует в памяти значение selectVisibleContacts,\n// и только при смене selectContacts, selectFilter будет переращет\nexport const selectVisibleContacts = createSelector(\n  [selectContacts, selectFilter],\n  (contacts, filter) => {\n    const normalizedFilter = filter.toLowerCase();\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(normalizedFilter)\n    );\n  }\n);\n\n// export const getVisibleContacts = state => {\n//   const contacts = getContacts(state);\n//   const filter = getFilter(state);\n\n//   const normalizedFilter = filter.toLowerCase();\n//   return contacts.filter(contact =>\n//     contact.name.toLowerCase().includes(normalizedFilter)\n//   );\n// };\n","// extracted by mini-css-extract-plugin\nexport default {\"label\":\"ContactFilter_label__qRVzC\",\"input\":\"ContactFilter_input__8mWOi\"};","import { useDispatch, useSelector } from 'react-redux';\nimport { selectFilter } from 'redux/contacts/selectors';\nimport { createFilter } from 'redux/contacts/filterSlice';\n\nimport css from './ContactFilter.module.css';\n\nconst ContactFilter = () => {\n  const dispatch = useDispatch();\n  const value = useSelector(selectFilter);\n\n  const onChangeFilter = event => {\n    const value = event.currentTarget.value;\n    dispatch(createFilter(value));\n  };\n\n  return (\n    <label className={css.label}>\n      Find contacts by name\n      <input\n        className={css.input}\n        type=\"text\"\n        name=\"name\"\n        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n        title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n        required\n        value={value}\n        onChange={onChangeFilter}\n      />\n    </label>\n  );\n};\n\nexport default ContactFilter;\n","// extracted by mini-css-extract-plugin\nexport default {\"form\":\"ContactForm_form__dhl+T\",\"label\":\"ContactForm_label__-cVXI\",\"input\":\"ContactForm_input__Bl93P\",\"button\":\"ContactForm_button__eSwX9\"};","import { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Notify } from 'notiflix';\nimport { selectContacts } from 'redux/contacts/selectors';\nimport { addContact } from 'redux/contacts/operations';\n\nimport css from './ContactForm.module.css';\n\nconst ContactEditor = () => {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const dispatch = useDispatch();\n  const contacts = useSelector(selectContacts);\n\n  const handleChange = event => {\n    const { name, value } = event.currentTarget;\n\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n\n      case 'number':\n        setNumber(value);\n        break;\n\n      default:\n        break;\n    }\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n\n    const isExist = contacts.find(\n      contact => contact.name.toLowerCase() === name.toLowerCase()\n    );\n\n    if (isExist) {\n      Notify.failure(`${name} is already in contacts`);\n      return;\n    }\n\n    dispatch(addContact({ name, number }));\n    resetForm();\n  };\n\n  const resetForm = () => {\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <form className={css.form} onSubmit={handleSubmit}>\n      <label className={css.label}>\n        Name\n        <input\n          className={css.input}\n          type=\"text\"\n          name=\"name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' \\-][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n          onChange={handleChange}\n          value={name}\n        />\n      </label>\n\n      <label className={css.label}>\n        Number\n        <input\n          className={css.input}\n          type=\"tel\"\n          name=\"number\"\n          pattern=\"\\+?\\d{1,4}?[\\-\\.\\s]?\\(?\\d{1,3}?\\)?[\\-\\.\\s]?\\d{1,4}[\\-\\.\\s]?\\d{1,4}[\\-\\.\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n          onChange={handleChange}\n          value={number}\n        />\n      </label>\n\n      <button type=\"submit\" className={css.button}>\n        Add contact\n      </button>\n    </form>\n  );\n};\n\nexport default ContactEditor;\n","// extracted by mini-css-extract-plugin\nexport default {\"list\":\"ContactList_list__csErn\",\"item\":\"ContactList_item__EZYHO\"};","// extracted by mini-css-extract-plugin\nexport default {\"contact\":\"Contact_contact__4zmlP\",\"box\":\"Contact_box__pf+aR\",\"button\":\"Contact_button__F+kJb\"};","import { useDispatch } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport css from './Contact.module.css';\nimport { deleteContact } from 'redux/contacts/operations';\n\nconst Contact = ({ id, name, number }) => {\n  const dispatch = useDispatch();\n\n  return (\n    <li className={css.contact}>\n      <div className={css.box}>\n        {name}: {number}\n        <button\n          type=\"button\"\n          className={css.button}\n          onClick={() => dispatch(deleteContact(id))}\n        >\n          Delete\n        </button>\n      </div>\n    </li>\n  );\n};\n\nexport default Contact;\n\nContact.propTypes = {\n  id: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  number: PropTypes.string.isRequired,\n};\n","import css from './ContactList.module.css';\nimport Contact from '../Contact';\nimport { useSelector } from 'react-redux';\nimport { selectVisibleContacts } from 'redux/contacts/selectors';\n\nconst ContactList = () => {\n  const contacts = useSelector(selectVisibleContacts);\n\n  return (\n    <ul className={css.list}>\n      {contacts &&\n        contacts.map(contact => <Contact key={contact.id} {...contact} />)}\n    </ul>\n  );\n};\n\nexport default ContactList;\n","import ContactFilter from '../../components/ContactFilter';\nimport ContactForm from '../../components/ContactForm';\nimport ContactList from '../../components/ContactList';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectError, selectLoading } from 'redux/contacts/selectors';\nimport { useEffect } from 'react';\nimport { fetchContacts } from 'redux/contacts/operations';\nimport Container from 'components/Container';\n\nconst Contacts = () => {\n  const dispatch = useDispatch();\n  const isLoading = useSelector(selectLoading);\n  const error = useSelector(selectError);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <Container>\n      <h1>Phonebook</h1>\n      <ContactForm />\n      <h2>Contacts</h2>\n      <ContactFilter />\n      {isLoading && <p>Contacts is loading, please wait...</p>}\n      {error && <p>{error}</p>}\n      <ContactList />\n    </Container>\n  );\n};\n\nexport default Contacts;\n"],"names":["selectContacts","state","contacts","contactsArray","selectLoading","isLoading","selectError","error","selectFilter","filter","query","selectVisibleContacts","createSelector","normalizedFilter","toLowerCase","contact","name","includes","dispatch","useDispatch","value","useSelector","className","css","type","pattern","title","required","onChange","event","currentTarget","createFilter","useState","setName","number","setNumber","handleChange","resetForm","onSubmit","preventDefault","find","Notify","addContact","id","onClick","deleteContact","map","useEffect","fetchContacts","Container","ContactForm"],"sourceRoot":""}